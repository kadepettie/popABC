params{

  outdir = 'output'
  mode = "all" // all, model

  git_dir = "/path/to/popABC" // directory with all popABC pipeline repos and code
  bin = "${git_dir}/selection_1000G"
  abc_code = "${git_dir}/ABC-Enhancer-Gene-Prediction" // contains environment .yaml and src directory
  plotdir = "${git_dir}/plotting"

  mean_qn_dir = "/previous/pipeline/execution/outdir/predictions/HiChIP/meanQN/*.meanQN.decomp.allZerosFilt.EnhancerPredictionsAllPutative.txt.gz"
  score_types = ['ABC.Score', 'chip.Score', 'hic.Score', 'atac.Score'] // 'activity.Score'
  enhancer_threshold = 0.015
  promoter_threshold = 0.1
  min_nonzero_hic = 16 // Number of samples with non-zero HiC/HiChIP contacts required to test E-G pair for diffABC (14 if CEU excluded)

}

// configured to run on Stanford's Sherlock compute cluster
// the software specified below are configured to run as
// Lmod modules, which can be set up in any Unix environment
process{
  module = 'conda/4.8.2'
  //errorStrategy = { task.exitStatus == 143 ? {sleep(Math.pow(2, task.attempt) * 200 as long); return 'retry'} : 'ignore' } // does this work?
  errorStrategy = 'finish'
  maxRetries = 2
  maxForks = 200
  stageInMode = 'rellink'
  queue = "hns,normal"
  withLabel: 'genrich'{
    module = 'biology:bedtools/2.30.0'
    cpus = 1
    time  = '8h'
  }
  withLabel: 'samtools'{
    module = 'biology:samtools/1.8'
    cpus = 16
    memory = '48G'
    time  = '8h'
  }
  withLabel: 'ccres'{
    module = 'biology:bedtools/2.30.0'
    cpus = 1
    memory = '4G'
    time  = '23h'
  }
  withLabel: 'predict'{
    module = 'biology:bedtools/2.30.0'
    cpus = 1
    memory = { 48.GB * task.attempt }
    errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'finish' }
    maxRetries = 4
    time = '23h'
  }
  withLabel: 'qnorm'{
    cpus = 1
    memory = { 4.GB * task.attempt }
    time  = '2h'
  }
  withLabel: 'qnorm_hic'{
    cpus = 1
    memory = { 8.GB * task.attempt }
    time = '2h'
    errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'finish' }
    maxRetries = 4
  }
  withLabel: 'mean_qnorm_hic'{
    module = 'math:R/4.0.2:biology:bedtools/2.30.0'
    cpus = 1
    memory = { 50.GB * task.attempt }
    time = { 12.h * task.attempt }
    errorStrategy = { task.exitStatus in 137..143 ? 'retry' : 'finish' }
    maxRetries = 2
  }
  withLabel: 'git'{
    module = 'system:git/2.12.2'
    cpus = 1
    memory = '4G'
    time  = '59m'
  }
  withLabel: 'rclone'{
    module = 'system:rclone'
    cpus = 1
    memory = '4G'
    time  = '3h'
  }
  withLabel: 'r'{
    module = 'math:R/4.0.2:biology:bedtools/2.30.0'
    memory = '4G'
    time  = '1h'
  }
  withLabel: 'bedpe'{
    module = 'math:R/4.0.2:biology:bedtools/2.30.0'
    memory = { 16.GB * task.attempt }
    time = '2h'
    errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'finish' }
    maxRetries = 4
  }
  withLabel: 'diff'{
    module = 'math:R/4.0.2:biology:bedtools/2.30.0'
    memory = '32G'
    time  = '12h'
  }
  withLabel: 'model'{
    module = 'math:R/4.0.2'
    memory = '12G'
    time  = '8h'
    errorStrategy = 'finish'
  }

}

executor{
  name = 'slurm'
  submitRateLimit = '2 sec'
  queueSize = 500
}

notification{
  enabled = false
  to = '' // your email address
}

timeline {
    enabled = true
    file = "./pipeline_info/timeline.html"
}

trace {
    enabled = true
    file = "./pipeline_info/trace.txt"
}

report {
    enabled = true
    file = "./pipeline_info/report.html"
}
