/*
 * -------------------------------------------------
 *  nf-core/hic Nextflow config file + hornet mapping
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Global default params, used in configs
params {
  // Inputs / outputs
  input = "/path/to/fastqs/round**/*" // null
  input_paths = null
  merge_lanes_rounds = true
  merge_reps = false
  save_merge = true
  outdir = './results'
  genome = 'GRCh37' // specify igenomes genome defined in conf/igenomes.config
  input_paths = false
  chromosome_size = false // false uses igenomes
  restriction_fragments = false // false uses igenomes
  save_reference = true

  // Mapping
  post_map = false // true to resume pipeline execution post-mapping (avoid splitting fastqs again)
  valid_pairs = "" // "${outdir}/hicpro/valid_pairs/*_bwt2pairs.validPairs" // specify if post_map
  split_fastq = true
  fastq_chunks_dir = "/path/to/hicpro/results/fastq_chunks/" // must be absolute path and end with '/' to work (?)
  fastq_chunks_size = 20000000
  save_interaction_bam = false
  save_aligned_intermediates = false
  bwt2_opts_end2end = '--very-sensitive -L 30 --score-min L,-0.6,-0.2 --end-to-end --reorder'
  bwt2_opts_trimmed = '--very-sensitive -L 20 --score-min L,-0.6,-0.2 --end-to-end --reorder'
  keep_dups = false
  keep_multi = false
  min_mapq = 5 // 10

  // Hornet
  sample_info = '/path/to/1000genomes/inds/20130606_sample_info.xlsx'
  vcf_pops = ['CEU_FIN_IBS_TSI_ESN_GWD_LWK_YRI']
  vcf_dir = "/path/to/1000genomes/1000GP_Phase3" // ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20130502/ (if not pre-downloaded)
  vcf_stem = "ALL.chr*.phase3_*integrated_v*.20130502.genotypes.vcf.gz"
  // variant must have at least this Minor Allele Frequency across all individuals
  // to require remapping of overlapping reads
  maf = 0.05
  mac = 0 // if maf = "", use this Minor Allele Count instead
  kgbin = "/path/to/popABC/selection_1000G"
  hornet_code = "/path/to/popABC/Hornet/mapping"


  // Digestion Hi-C
  digestion = 'mboi' // false
  digest {
    'hindiii'{
       restriction_site='A^AGCTT'
       ligation_site='AAGCTAGCTT'
    }
    'mboi' {
       restriction_site='^GATC'
       ligation_site='GATCGATC'
    }
    'dpnii' {
       restriction_site='^GATC'
       ligation_site='GATCGATC'
    }
    'arima' {
       restriction_site='^GATC,G^ANT'
       ligation_site='GATCGATC,GATCGANT,GANTGATC,GANTGANT'
    }
  }
  min_restriction_fragment_size = 0
  max_restriction_fragment_size = 0
  min_insert_size = 0
  max_insert_size = 0
  save_nonvalid_pairs = false

  // Dnase Hi-C
  dnase = false
  min_cis_dist = 0

  // Contact maps
  bin_size = '5000' // '1000000,500000'
  res_zoomify = '5000'
  hicpro_maps = true // false
  ice_max_iter = 100
  ice_filter_low_count_perc = 0.02
  ice_filter_high_count_perc =  0
  ice_eps = 0.1

  // Downstream Analysis
  res_dist_decay = '250000'
  tads_caller = 'insulation'
  res_tads = '40000'
  res_compartments = '250000'

  // Workflow
  skip_maps = false
  skip_balancing = false
  skip_mcool = false
  skip_dist_decay = false
  skip_compartments = false
  skip_tads = false
  skip_multiqc = false

  // Boilerplate options
  publish_dir_mode = 'rellink'
  multiqc_config = false
  email = false // your email address
  email_on_fail = false // your email address
  max_multiqc_email_size = 25.MB
  plaintext_email = false
  monochrome_logs = false
  help = false
  igenomes_base = 's3://ngi-igenomes/igenomes'
  tracedir = "${params.outdir}/pipeline_info"
  igenomes_ignore = false

  //Config
  custom_config_version = 'master'
  custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  hostnames = false
  config_profile_name = 'merge_lanes_fraser'
  config_profile_description = false
  config_profile_contact = false
  config_profile_url = false
  validate_params = true
  show_hidden_params = false
  schema_ignore_params = 'genomes,digest,input_paths'

  // Defaults only, expecting to be overwritten
  max_memory = 128.GB // 24.GB
  max_cpus = 32 // 8
  max_time = 240.h
  samcores = 8
  sortcores = 12
  sortmem = '75G'
  tmpdir = "/path/to/tmp"
  
}

// configured to run on Fraser Lab compute cluster
// the software specified below are configured to run as
// Lmod modules, which can be set up in any Unix environment

process{
  maxForks = 200
  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 2
  stageInMode = 'rellink'
  conda = '/path/to/environment.yml' // absolute path to environment.yml in parent directory
  withName: subset_vcf {
    module = 'vcftools'
    cpus = 1
    memory = '10G'
    time  = '2h'
  }
  withName: get_snps {
    cpus = 1
    memory = '4G'
    time  = '2h'
  }
  withName: find_intersecting_snps {
    module = 'fraserconda'
    cpus = 1
    memory = { 20.GB * task.attempt } // 20G for 70+M vars
    time  = '30h' // 30h for 70+M vars
  }
  withName: filter_remapped {
    module = 'fraserconda'
    cpus = 1
    memory = '16G'
    time  = '10h'
  }
  withName: get_vcf_inds {
    conda = null
    module = 'R/4.1.0'
    cpus = 1
    memory = '4G'
    time  = '1h'
  }
  withLabel: 'samtools'{
    module = 'samtools'
    cpus = params.samcores
    memory = params.samcores*2 + 'G'
    time  = '8h'
  }
  withLabel: 'sort'{
    cpus = params.sortcores
    memory = params.sortmem
    time  = '48h'
  }
}

profiles {
    conda {
        cacheDir = '/path/to/conda_nf/' // conda cache dir
    	docker.enabled = false
    	singularity.enabled = false
    	podman.enabled = false
    	shifter.enabled = false
    	charliecloud.enabled = false
	process.conda = '/path/to/environment.yml' // absolute path to environment.yml in parent directory
    }
}

executor{
  name = 'slurm'
  submitRateLimit = '1 sec'
  queueSize = 500
}

notification{
  enabled = false
  to = '' // your email address
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}
